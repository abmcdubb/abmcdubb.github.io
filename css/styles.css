/*! normalize.css v2.1.3 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap; }

/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

body {
  background: #550000;
  color: #550000;
  font-family: 'Allerta Stencil', sans-serif; }
  body a {
    text-decoration: none; }
    body a:visited {
      color: inherit !important; }
    body a:hover {
      text-decoration: none; }

.preloading {
  position: fixed;
  left: 0px;
  top: 76px;
  width: 100%;
  height: 100%;
  z-index: 9999;
  background: url("../images/triangle.svg") center no-repeat #7c859b; }
  .preloading .loading-text {
    position: absolute;
    top: 75%;
    left: 46%;
    font-size: 24px;
    color: white; }

.section {
  height: 100vh; }

.intro.section {
  background: url("../images/me_on_red_background_1.jpg") no-repeat center 100%;
  background-size: cover; }
  .intro.section .navbar {
    height: 10vh;
    margin-bottom: 10vh;
    background: #FFFFFF;
    opacity: 0.3; }
  .intro.section .logo {
    font-size: 8.5vh;
    margin-left: 10vh;
    color: #7C859B; }
    .intro.section .logo a {
      color: #7C859B; }
  .intro.section .navlinks {
    width: 40.67797%;
    float: right;
    margin-right: 0;
    font-size: 4.5vh;
    -ms-transform: translateY(-50%);
        transform: translateY(-50%); }
    .intro.section .navlinks .navlink {
      display: inline-block;
      margin-right: 60px; }
      .intro.section .navlinks .navlink a {
        color: #7C859B; }
  .intro.section .main .name {
    display: inline-block;
    -webkit-writing-mode: vertical-rl;
        -ms-writing-mode: tb-rl;
            writing-mode: vertical-rl;
    -ms-transform: rotate(180deg);
        transform: rotate(180deg);
    font-size: 7vh;
    color: #550000;
    position: absolute;
    height: 100vh;
    left: 0;
    opacity: 1;
    text-align: center; }
  .intro.section .main-text {
    font-family: 'Flamenco', cursive;
    display: inline-block;
    width: 60vw;
    margin-left: 20vw;
    margin-right: 20vw;
    margin-bottom: 50px;
    font-size: 2vw;
    line-height: 6.5vh;
    letter-spacing: 2px;
    font-weight: 700;
    text-align: center; }
    .intro.section .main-text.blog {
      margin-left: 10%; }
    .intro.section .main-text .introduction-text1 {
      margin: 0; }
    .intro.section .main-text .introduction-text2 {
      visibility: hidden; }
  .intro.section .buttons {
    margin-left: 30vw;
    font-size: 10pt;
    letter-spacing: .40pt; }
    .intro.section .buttons .email-me, .intro.section .buttons .github {
      text-align: center;
      background: #550000;
      opacity: 0.5;
      display: inline-block;
      color: #CCC;
      height: 32px;
      border-radius: 25px; }
    .intro.section .buttons .email-me {
      width: 176px;
      margin-right: 75px; }
    .intro.section .buttons .github {
      width: 200px; }
    .intro.section .buttons .email-me-text, .intro.section .buttons .github-text {
      color: white;
      line-height: 32px; }

.projects {
  color: gray; }
  .projects .section {
    padding: 10vh; }
  .projects .project {
    border: 2px gray solid;
    height: 80vh;
    margin-bottom: 10vh; }
    .projects .project .project-name {
      font-size: 6vh;
      font-weight: 400;
      letter-spacing: 2vh;
      padding: 0 10px;
      margin-top: -3vh;
      left: 20vh;
      position: absolute;
      z-index: 9999;
      background-color: transparent; }
    .projects .project .project-information {
      display: -ms-flexbox;
      display: flex; }
      .projects .project .project-information .project-screenshot {
        margin: 10vh 0 10vh 10vh;
        border-radius: 5px;
        width: 60vw;
        height: 60vh; }
        .projects .project .project-information .project-screenshot img {
          max-width: 95%;
          max-height: 95%; }
        .projects .project .project-information .project-screenshot .built-with {
          font-family: 'Flamenco', cursive;
          font-size: 1.5vw; }
        .projects .project .project-information .project-screenshot.pokemon-tweets-image img {
          border: 1px black solid; }
        .projects .project .project-information .project-screenshot.alisha-mcwilliams-image {
          margin: 10vh 10vh 10vh 0; }
      .projects .project .project-information .project-description {
        font-family: 'Flamenco', cursive;
        font-size: 2.5vw;
        letter-spacing: .4vh;
        padding: 10vh;
        width: 30vw; }
        .projects .project .project-information .project-description .site-name {
          color: gray; }

.footer-divider {
  margin-left: 55px;
  margin-right: 55px; }

.footer {
  height: 75px; }
  .footer .copyright span {
    line-height: 75px;
    margin-left: 55px; }
  .footer .copyright, .footer .social-media-links {
    display: inline-block; }
  .footer .social-media-links {
    float: right;
    margin-right: 55px; }
    .footer .social-media-links img {
      height: 35px;
      margin-right: 15px;
      transition: transform .8s ease-in-out; }
      .footer .social-media-links img:hover {
        transform: rotateY(360deg); }
  .footer .social-media-links, .footer .copyright span {
    position: relative;
    -ms-transform: translateY(-50%);
        transform: translateY(-50%);
    top: 50%; }

.pink-bkg {
  background-color: #ffdede !important;
  transition: background-color .5s ease; }

.purpleish-bkg {
  background-color: #c5aeb4 !important;
  transition: background-color .5s ease; }

.beige-bkg {
  background-color: #d2c8c8 !important;
  transition: background-color .5s ease; }

.blog-page .main-image {
  background: url("../images/wip.jpg") no-repeat center center;
  background-size: cover;
  height: 1000px; }

.blog-page .main-text {
  margin-left: 10%;
  padding-top: 10%; }

.fixed-navbar-start {
  display: none; }

.fixed-navbar {
  position: fixed;
  height: 75px;
  width: 75px;
  border-radius: 50%;
  right: 3vh;
  top: 3vh;
  background-color: white;
  opacity: 0.7;
  color: #7C859B; }
  .fixed-navbar.visible {
    display: block;
    animation: show-fixed-navbar 1s ease 0s 1 normal; }
  .fixed-navbar.green-logo {
    animation: change-to-green 1s ease 0s 1 normal;
    animation-fill-mode: forwards; }
  .fixed-navbar.hidden {
    animation: hide-fixed-navbar 1s;
    animation-fill-mode: forwards; }
  .fixed-navbar a {
    color: #7C859B; }
  .fixed-navbar .fixed-navbar-first-name-text {
    font-size: 15pt;
    margin-top: 12px;
    margin-left: 11px;
    display: block; }
  .fixed-navbar .fixed-navbar-last-name-text {
    font-size: 27pt;
    margin-left: 12px;
    display: block;
    line-height: 60%; }

@media only screen and (max-device-width: 360px) {
  .intro.section .navbar {
    margin-bottom: 1vh;
    height: 6vh; }
  .intro.section .main .name {
    font-size: 6.5vh; }
  .intro.section .main .main-text {
    font-size: 3.5vh;
    margin-bottom: 0;
    line-height: 5vh;
    width: 70vw;
    margin-left: 20vw;
    margin-right: 10vw; }
  .intro.section .main .buttons {
    margin-left: 20vw; }
    .intro.section .main .buttons a div {
      height: 6vh;
      border-radius: 4vh;
      display: block;
      width: 70vw;
      font-size: 3vh;
      padding-top: 1.5vh; }
      .intro.section .main .buttons a div.email-me {
        margin-bottom: 1vh; }
  .projects .section {
    padding: 3vh; }
    .projects .section.pokemongo-tweets {
      background-color: #ffdede !important;
      transition: background-color .5s ease; }
    .projects .section.me-dot-com .project .project-information {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: column;
          flex-direction: column; }
      .projects .section.me-dot-com .project .project-information .project-description {
        -ms-flex-order: 2;
            order: 2; }
      .projects .section.me-dot-com .project .project-information .project-screenshot {
        -ms-flex-order: 1;
            order: 1;
        margin: 50px auto; }
  .projects .project .project-name {
    font-size: 2.5vh;
    left: 5vh;
    letter-spacing: 1vh;
    margin-top: -1.5vh; }
  .projects .project .project-information {
    display: block; }
    .projects .project .project-information .project-screenshot {
      width: 80vw;
      margin: 2.5vh;
      height: auto; }
      .projects .project .project-information .project-screenshot a img {
        width: 100%;
        max-width: 100%; }
      .projects .project .project-information .project-screenshot .built-with {
        font-size: 3vh;
        margin-top: 2.5vh;
        padding: 2.5vh;
        border: 1px #7C859B solid;
        text-align: center; }
    .projects .project .project-information .project-description {
      font-size: 3.5vh;
      margin: 2.5vh;
      padding: 0;
      width: 80vw;
      text-align: center; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
