/*! normalize.css v2.1.3 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em; }

/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap; }

/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0; }

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

body {
  color: #374F33;
  font-family: Lato; }
  body a {
    text-decoration: none; }
    body a:visited {
      color: inherit !important; }
    body a:hover {
      text-decoration: none; }

.preloading {
  position: fixed;
  left: 0px;
  top: 76px;
  width: 100%;
  height: 100%;
  z-index: 9999;
  background: url("../images/triangle.svg") center no-repeat #7c859b; }
  .preloading .loading-text {
    position: absolute;
    top: 75%;
    left: 46%;
    font-size: 24px;
    color: white; }

.home-page .main-image {
  background: url("../images/main.jpg") no-repeat center center;
  background-size: cover;
  height: 1000px; }

.navbar {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0;
  height: 76px;
  margin-bottom: 116px;
  background: #FFFFFF;
  opacity: 0.7; }

.logo {
  width: 49.15254%;
  float: left;
  margin-right: 1.69492%;
  font-size: 26pt;
  margin-left: 50px;
  position: relative;
  top: 20%;
  color: #7C859B; }
  .logo a {
    color: #7C859B; }

.navlinks {
  width: 40.67797%;
  float: right;
  margin-right: 0;
  font-size: 16pt;
  position: relative;
  top: 50%;
  -ms-transform: translateY(-50%);
      transform: translateY(-50%); }
  .navlinks .navlink {
    display: inline-block;
    margin-right: 60px; }
    .navlinks .navlink a {
      color: #7C859B; }

.main-text {
  margin-left: 25%;
  margin-right: 25%;
  margin-bottom: 50px;
  padding-top: 25%;
  font-size: 17pt;
  line-height: 25pt; }
  .main-text.blog {
    margin-left: 10%; }
  .main-text .introduction-text2 {
    visibility: hidden; }

.buttons {
  margin-left: 25%;
  font-size: 10pt;
  letter-spacing: .40pt; }
  .buttons .email-me, .buttons .github {
    background: #374F33;
    opacity: 0.5;
    display: inline-block;
    color: #CCC;
    height: 32px;
    border-radius: 25px; }
  .buttons .email-me {
    width: 176px;
    margin-right: 75px; }
  .buttons .github {
    width: 200px; }
  .buttons .email-me-text, .buttons .github-text {
    color: white;
    line-height: 32px; }
  .buttons .email-me-text {
    margin-left: 20px; }
  .buttons .github-text {
    margin-left: 17px; }

.recent-work {
  margin: 50px 55px 22px 55px; }
  .recent-work .previous-arrow, .recent-work .next-arrow {
    height: 40px;
    position: absolute;
    top: 47%;
    z-index: 1;
    display: block;
    -ms-transform: translate(0, -50%);
        transform: translate(0, -50%);
    cursor: pointer;
    animation: floating-arrow .5s ease-in-out 0s infinite alternate; }
  .recent-work .next-arrow {
    right: 0px; }
  .recent-work .projects .slick-track {
    margin-top: 75px;
    margin-bottom: 75px; }
  .recent-work .section-title {
    font-size: 17pt; }
  .recent-work .project-descriptions .description {
    text-align: center;
    font-size: 18px;
    border-radius: 5px;
    border: 2px solid #374F33;
    color: #374F33; }
    .recent-work .project-descriptions .description p {
      margin: 10px; }
    .recent-work .project-descriptions .description a {
      color: #374F33; }
  .recent-work .project {
    border-radius: 25%;
    padding: 5px 15px;
    transition-duration: .5s; }
    .recent-work .project.slick-center {
      -ms-transform: scale(1.5);
          transform: scale(1.5);
      transition-duration: 1s; }
    .recent-work .project .screenshot {
      height: 234px;
      overflow: hidden; }
      .recent-work .project .screenshot img {
        height: 100%;
        opacity: 0.3; }
    .recent-work .project.slick-current .screenshot img {
      opacity: 1;
      transition: opacity .1s ease-in-out; }
    .recent-work .project.slick-active:not(.slick-current) .screenshot img {
      -webkit-filter: grayscale(100%);
              filter: grayscale(100%);
      position: relative;
      z-index: -1; }

.footer-divider {
  margin-left: 55px;
  margin-right: 55px; }

.footer {
  height: 75px; }
  .footer .copyright span {
    line-height: 75px;
    margin-left: 55px; }
  .footer .copyright, .footer .social-media-links {
    display: inline-block; }
  .footer .social-media-links {
    float: right;
    margin-right: 55px; }
    .footer .social-media-links img {
      height: 35px;
      margin-right: 15px;
      transition: transform .8s ease-in-out; }
      .footer .social-media-links img:hover {
        transform: rotateY(360deg); }
  .footer .social-media-links, .footer .copyright span {
    position: relative;
    -ms-transform: translateY(-50%);
        transform: translateY(-50%);
    top: 50%; }

.blog-page .main-image {
  background: url("../images/wip.jpg") no-repeat center center;
  background-size: cover;
  height: 1000px; }

.blog-page .main-text {
  margin-left: 10%;
  padding-top: 10%; }

@keyframes floating-arrow {
  from {
    transform: translate(0px, 0px); }
  to {
    transform: translate(0px, -2px); } }

.fixed-navbar-start {
  display: none; }

.fixed-navbar {
  position: fixed;
  height: 75px;
  width: 75px;
  border-radius: 50%;
  right: 55px;
  top: 15px;
  background-color: white;
  opacity: 0.7;
  color: #7C859B; }
  .fixed-navbar.visible {
    display: block;
    animation: show-fixed-navbar 1s ease 0s 1 normal; }
  .fixed-navbar.green-logo {
    animation: change-to-green 1s ease 0s 1 normal;
    animation-fill-mode: forwards; }
  .fixed-navbar.hidden {
    animation: hide-fixed-navbar 1s;
    animation-fill-mode: forwards; }
  .fixed-navbar a {
    color: #7C859B; }
  .fixed-navbar .fixed-navbar-first-name-text {
    font-size: 15pt;
    margin-top: 12px;
    margin-left: 11px;
    display: block; }
  .fixed-navbar .fixed-navbar-last-name-text {
    font-size: 27pt;
    margin-left: 12px;
    display: block;
    line-height: 60%; }

@keyframes show-fixed-navbar {
  0% {
    transform: scale(0.1, 0.1); }
  50% {
    transform: rotateX(180deg); }
  100% {
    transform: rotateX(360deg); } }

@keyframes hide-fixed-navbar {
  0% {
    transform: rotateX(-90deg);
    opacity: 0.7; }
  25% {
    transform: rotateX(-180deg) scale(0.7, 0.7);
    opacity: 0.5; }
  75% {
    transform: rotateX(-270deg) scale(0.3, 0.3);
    opacity: 0.3; }
  100% {
    transform: rotateX(-360deg);
    opacity: 0;
    visibility: hidden; } }

@keyframes change-to-green {
  0% {
    transform: rotateX(-90deg);
    opacity: 0.2;
    border: 5px solid #374F33;
    color: #374F33; }
  25% {
    transform: rotateX(-180deg);
    opacity: 0.4;
    border: 5px solid #374F33;
    color: #374F33; }
  75% {
    transform: rotateX(-270deg);
    opacity: 0.7;
    border: 5px solid #374F33;
    color: #374F33; }
  100% {
    transform: rotateX(-360deg);
    opacity: 1;
    border: 5px solid #374F33;
    color: #374F33; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
